#pragma checksum "E:\VS Working\.net core\Lunch\Lunch.Admin\Views\Category\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b7562d08f1f3b5995c995684d03852ffd4e2de30"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_Index), @"mvc.1.0.view", @"/Views/Category/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b7562d08f1f3b5995c995684d03852ffd4e2de30", @"/Views/Category/Index.cshtml")]
    public class Views_Category_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<script type=\"text/template\" id=\"categoryList\">\r\n    <div>\r\n        <div style=\"text-align: right\">\r\n            <el-button type=\"success\" ");
            WriteLiteral(@"@click=""addCategory()"">添加类别</el-button>
        </div>
        <el-table :data=""tableData""
                  style=""width: 100%"">
            <el-table-column prop=""id""
                             label=""ID"">
            </el-table-column>
            <el-table-column prop=""name""
                             label=""名称"">
            </el-table-column>

            <el-table-column fixed=""right""
                             label=""操作""
                             width=""180"">
                <template slot-scope=""scope"">
                    <el-button ");
            WriteLiteral("@click=\"editCategory(scope.row)\" type=\"success\" size=\"small\">\r\n                        编辑\r\n                    </el-button>\r\n                    <el-button ");
            WriteLiteral(@"@click=""deleteCategory(scope.row.id)"" type=""danger"" size=""small"">
                        删除
                    </el-button>
                </template>
            </el-table-column>
        </el-table>

        <el-dialog :title=""editType"" :visible.sync=""addFoodVisible"">
            <el-form :model=""form"">
                <el-form-item label=""名称"" :label-width=""formLabelWidth"">
                    <el-input v-model=""form.Name"" autocomplete=""off""></el-input>
                </el-form-item>
            </el-form>
            <div slot=""footer"" class=""dialog-footer"">
                <el-button ");
            WriteLiteral("@click=\"closeDialog()\">取 消</el-button>\r\n                <el-button type=\"success\" ");
            WriteLiteral(@"@click=""submitCategory()"">确 定</el-button>
            </div>
        </el-dialog>
    </div>
</script>

<script type=""text/javascript"">
    var category = {
        template: '#categoryList',
        data() {
            return {
                tableData: [],

                form: {
                    Id: 0,
                    Name: """",
                },

                editType: ""添加"",
                backup: {},
                addFoodVisible: false,
                formLabelWidth: '80px'
            }
        },
        mounted() {
            this.getData();
        },
        methods: {
            getData() {
                _fetch(""/Category/GetCategorys"", ""GET"").then(res => {
                    if (res.status = ""Success"") {
                        this.tableData = res.data;
                    }
                    else {
                        alert(""系统出错了！"");
                    }
                });
            },

            addCategory() {
         ");
            WriteLiteral(@"       this.editType = ""添加类型"";
                this.addFoodVisible = true;
            },

            editCategory(row) {
                this.editType = ""编辑类型"";
                this.form = {
                    Id: row.id,
                    Name: row.name
                };
                this.addFoodVisible = true;
            },

            closeDialog() {
                this.form = {
                    Id: 0,
                    Name: """",
                };

               this.addFoodVisible = false;
            },

            submitCategory() {
                if (!this.form.Name) {
                    alert(""请完成下面所有信息！"")
                    return;
                }

                var model = $.extend(true, {}, this.form);
                var data = {
                    Id: model.Id,
                    Name: model.Name
                }

                _fetch(""/Category/EditCategory"", ""POST"", data).then(res => {
                    if (res.status == true)");
            WriteLiteral(@" {
                        alert(""操作成功！"");
                        this.getData();
                        this.addFoodVisible = false;
                    }
                    else {
                        alert(""系统出错了！"");
                    }
                });
            },


            deleteCategory(id) {
               _fetch(""/Category/DeleteCategory?id="" + id, ""POST"").then(res => {
                    if (res.status == true) {
                        alert(""操作成功！"");
                        this.getData();
                    }
                    else {
                        alert(""系统出错了！"");
                    }
                });
            },
        }
    };
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
